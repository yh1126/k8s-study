apiVersion: apps/v1
kind: Deployment #obj種類
metadata:
  name: secret-volume-hideshi # deploymentの名前
  namespace: hideshi
  labels:
    app: secret-volume-hideshi #label kye-value形式なのでapp=nginxとなる
spec:
  replicas: 2 #podの数
  strategy: # deploy時の戦略
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1 #deploy時に作成していくpodの数。1だと1個ずつpodをdeployしていく
      maxUnavailable: 0 #deploy中に使用不可になる可能性があるpodの数
      # 例えば0にしている場合、deploy中に使用不可になるpodは0です
  revisionHistoryLimit: 5 #何世代までバージョンを管理するか
  selector: # 管理するpodのラベル
    matchLabels:
      app: secret-volume-hideshi
  template: #podのテンプレート定義
    metadata:
      labels: #podのラベルの定義
        app: secret-volume-hideshi
    spec: #podのspec
      containers:
      - name: secret-volume-hideshi #コンテナの名前
        resources:
          requests: #podに割り当てる最低限のリソース
            cpu: 50m
            memory: 128Mi
          limits: #podに割り当てられるリソースの上限
            memory: 128Mi
        image: nginx:1.7.9 #使用するイメージ
        # imagepullpolicyはイメージがAlwaysの場合必ずイメージを引っ張ってくる。手元にあるイメージを使わない
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        livenessProbe:
          httpGet:
            port: 80
            path: /
          failureThreshold: 5
          periodSeconds: 5
        # わざと失敗させる
        #readinessProbe:
        #  exec:
        #    command: ["rm", "hideshi"]
        env: #secret objの中身を環境変数として登録
          - name: SECRET_KEY_NAME
            valueFrom:
              secretKeyRef:
                name: hideshi-secret
                key: key-name
          - name: SECRET_APP_NAME
            valueFrom:
              secretKeyRef:
                name: hideshi-secret
                key: app-name
        volumeMounts: # configmapの値をファイルとしてマウントする
        - name: secrets-volume
          mountPath: /etc/secrets
          readOnly: true
      volumes:
      - name: secrets-volume
        secret:
          secretName: hideshi-secret
